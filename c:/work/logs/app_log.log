2017-02-20 15:00:16 INFO  DispatcherServlet:479 - FrameworkServlet 'mvc-dispatcher': initialization started
2017-02-20 15:00:17 INFO  XmlWebApplicationContext:513 - Refreshing WebApplicationContext for namespace 'mvc-dispatcher-servlet': startup date [Mon Feb 20 15:00:17 IST 2017]; root of context hierarchy
2017-02-20 15:00:17 INFO  XmlBeanDefinitionReader:316 - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring-config.xml]
2017-02-20 15:00:19 INFO  AutowiredAnnotationBeanPostProcessor:141 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-02-20 15:00:20 INFO  DriverManagerDataSource:133 - Loaded JDBC driver: org.postgresql.Driver
2017-02-20 15:00:21 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.4.Final}
2017-02-20 15:00:21 INFO  Version:54 - HHH000412: Hibernate Core {4.3.5.Final}
2017-02-20 15:00:21 INFO  Environment:239 - HHH000206: hibernate.properties not found
2017-02-20 15:00:21 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2017-02-20 15:00:24 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2017-02-20 15:00:24 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2017-02-20 15:00:25 WARN  RootClass:288 - HHH000038: Composite-id class does not override equals(): com.gsmart.model.CompoundLeaveMaster
2017-02-20 15:00:25 WARN  RootClass:289 - HHH000039: Composite-id class does not override hashCode(): com.gsmart.model.CompoundLeaveMaster
2017-02-20 15:00:25 WARN  RootClass:288 - HHH000038: Composite-id class does not override equals(): com.gsmart.model.CompoundInventory
2017-02-20 15:00:25 WARN  RootClass:289 - HHH000039: Composite-id class does not override hashCode(): com.gsmart.model.CompoundInventory
2017-02-20 15:00:25 WARN  RootClass:288 - HHH000038: Composite-id class does not override equals(): com.gsmart.model.CompoundReportCard
2017-02-20 15:00:25 WARN  RootClass:289 - HHH000039: Composite-id class does not override hashCode(): com.gsmart.model.CompoundReportCard
2017-02-20 15:00:25 WARN  RootClass:288 - HHH000038: Composite-id class does not override equals(): com.gsmart.model.CompoundFeeMaster
2017-02-20 15:00:25 WARN  RootClass:289 - HHH000039: Composite-id class does not override hashCode(): com.gsmart.model.CompoundFeeMaster
2017-02-20 15:00:25 WARN  RootClass:288 - HHH000038: Composite-id class does not override equals(): com.gsmart.model.CompoundAssign
2017-02-20 15:00:25 WARN  RootClass:289 - HHH000039: Composite-id class does not override hashCode(): com.gsmart.model.CompoundAssign
2017-02-20 15:00:25 WARN  RootClass:288 - HHH000038: Composite-id class does not override equals(): com.gsmart.model.RolePermissionCompound
2017-02-20 15:00:25 WARN  RootClass:289 - HHH000039: Composite-id class does not override hashCode(): com.gsmart.model.RolePermissionCompound
2017-02-20 15:00:25 WARN  RootClass:288 - HHH000038: Composite-id class does not override equals(): com.gsmart.model.CompoundLeaveDetails
2017-02-20 15:00:25 WARN  RootClass:289 - HHH000039: Composite-id class does not override hashCode(): com.gsmart.model.CompoundLeaveDetails
2017-02-20 15:00:25 WARN  RootClass:288 - HHH000038: Composite-id class does not override equals(): com.gsmart.model.CompoundBand
2017-02-20 15:00:25 WARN  RootClass:289 - HHH000039: Composite-id class does not override hashCode(): com.gsmart.model.CompoundBand
2017-02-20 15:00:25 WARN  RootClass:288 - HHH000038: Composite-id class does not override equals(): com.gsmart.model.CompoundHoliday
2017-02-20 15:00:25 WARN  RootClass:289 - HHH000039: Composite-id class does not override hashCode(): com.gsmart.model.CompoundHoliday
2017-02-20 15:00:25 WARN  RootClass:288 - HHH000038: Composite-id class does not override equals(): com.gsmart.model.CompoundWeekDays
2017-02-20 15:00:25 WARN  RootClass:289 - HHH000039: Composite-id class does not override hashCode(): com.gsmart.model.CompoundWeekDays
2017-02-20 15:00:25 WARN  RootClass:288 - HHH000038: Composite-id class does not override equals(): com.gsmart.model.CompoundLeave
2017-02-20 15:00:25 WARN  RootClass:289 - HHH000039: Composite-id class does not override hashCode(): com.gsmart.model.CompoundLeave
2017-02-20 15:00:25 WARN  RootClass:288 - HHH000038: Composite-id class does not override equals(): com.gsmart.model.CompoundModules
2017-02-20 15:00:25 WARN  RootClass:289 - HHH000039: Composite-id class does not override hashCode(): com.gsmart.model.CompoundModules
2017-02-20 15:00:25 WARN  RootClass:288 - HHH000038: Composite-id class does not override equals(): com.gsmart.model.CompoundBanner
2017-02-20 15:00:25 WARN  RootClass:289 - HHH000039: Composite-id class does not override hashCode(): com.gsmart.model.CompoundBanner
2017-02-20 15:00:25 INFO  TransactionFactoryInitiator:62 - HHH000399: Using default transaction strategy (direct JDBC transactions)
2017-02-20 15:00:25 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2017-02-20 15:00:29 INFO  SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
2017-02-20 15:00:29 INFO  SchemaUpdate:193 - HHH000102: Fetching database metadata
2017-02-20 15:00:31 INFO  SchemaUpdate:205 - HHH000396: Updating schema
2017-02-20 15:00:31 INFO  TableMetadata:66 - HHH000261: Table found: public.apply_leave
2017-02-20 15:00:31 INFO  TableMetadata:67 - HHH000037: Columns: [smart_id, end_date, entry_time, updated_time, hid, is_active, leave_status, number_of_days, description, exit_time, leave_type, name, reportingmanager_id, start_date]
2017-02-20 15:00:31 INFO  TableMetadata:69 - HHH000108: Foreign keys: [fk_bohcr510qv87k6gworvwg3apu]
2017-02-20 15:00:31 INFO  TableMetadata:70 - HHH000126: Indexes: [apply_leave_pkey]
2017-02-20 15:00:31 INFO  TableMetadata:66 - HHH000261: Table found: public.assign
2017-02-20 15:00:31 INFO  TableMetadata:67 - HHH000037: Columns: [standard, exit_time, teacher_smart_id, entry_time, updated_time, hid, is_active, hod_smart_id, principal_smart_id, section]
2017-02-20 15:00:31 INFO  TableMetadata:69 - HHH000108: Foreign keys: [fk_qjiuwoxa3djsjqca2fsfacvpt]
2017-02-20 15:00:31 INFO  TableMetadata:70 - HHH000126: Indexes: [assign_pkey]
2017-02-20 15:00:31 INFO  TableMetadata:66 - HHH000261: Table found: public.band_master
2017-02-20 15:00:31 INFO  TableMetadata:67 - HHH000037: Columns: [band_id, exit_time, entry_time, updated_time, role, is_active, designation]
2017-02-20 15:00:31 INFO  TableMetadata:69 - HHH000108: Foreign keys: []
2017-02-20 15:00:31 INFO  TableMetadata:70 - HHH000126: Indexes: [band_master_pkey]
2017-02-20 15:00:32 INFO  TableMetadata:66 - HHH000261: Table found: public.fee
2017-02-20 15:00:32 INFO  TableMetadata:67 - HHH000037: Columns: [date, parent_name, smart_id, standard, entry_time, hid, exittime, reporting_manager_id, isactive, balance_fee, paid_fee, sports_fee, updatedtime, id_card_fee, academic_year, toatl_fee, name, mode_of_payment, fee_status, transportation_fee, tuition_fee, miscellaneous_fee]
2017-02-20 15:00:32 INFO  TableMetadata:69 - HHH000108: Foreign keys: [fk_4yocb6nme6khe0y549xjo7smq]
2017-02-20 15:00:32 INFO  TableMetadata:70 - HHH000126: Indexes: [fee_pkey]
2017-02-20 15:00:32 INFO  TableMetadata:66 - HHH000261: Table found: public.fee_master
2017-02-20 15:00:32 INFO  TableMetadata:67 - HHH000037: Columns: [standard, entry_time, updated_time, hid, isactive, sports_fee, exit_time, institution, id_card_fee, school, total_fee, transportation_fee, tuition_fee, miscellaneous_fee]
2017-02-20 15:00:32 INFO  TableMetadata:69 - HHH000108: Foreign keys: [fk_3jf3o52vi8v105x9nd9vsm66s]
2017-02-20 15:00:32 INFO  TableMetadata:70 - HHH000126: Indexes: [fee_master_pkey]
2017-02-20 15:00:32 INFO  TableMetadata:66 - HHH000261: Table found: public.hierarchy_master
2017-02-20 15:00:32 INFO  TableMetadata:67 - HHH000037: Columns: [exit_time, entry_time, institution, hid, update_time, is_active, school]
2017-02-20 15:00:32 INFO  TableMetadata:69 - HHH000108: Foreign keys: []
2017-02-20 15:00:32 INFO  TableMetadata:70 - HHH000126: Indexes: [hierarchy_master_pkey]
2017-02-20 15:00:32 INFO  TableMetadata:66 - HHH000261: Table found: public.holiday_master
2017-02-20 15:00:32 INFO  TableMetadata:67 - HHH000037: Columns: [exit_time, entry_time, updated_time, holiday_date, hid, is_active, description]
2017-02-20 15:00:32 INFO  TableMetadata:69 - HHH000108: Foreign keys: [fk_19qi13sy81jxmnv8li5lxx050]
2017-02-20 15:00:32 INFO  TableMetadata:70 - HHH000126: Indexes: [holiday_master_pkey]
2017-02-20 15:00:32 INFO  TableMetadata:66 - HHH000261: Table found: public.inventory
2017-02-20 15:00:32 INFO  TableMetadata:67 - HHH000037: Columns: [exit_time, entry_time, update_time, hid, item_type, isactive, category]
2017-02-20 15:00:32 INFO  TableMetadata:69 - HHH000108: Foreign keys: [fk_69cwc2d9nxdo2fbdwajax7vgy]
2017-02-20 15:00:32 INFO  TableMetadata:70 - HHH000126: Indexes: [inventory_pkey]
2017-02-20 15:00:32 INFO  TableMetadata:66 - HHH000261: Table found: public.inventory_assignments
2017-02-20 15:00:32 INFO  TableMetadata:67 - HHH000037: Columns: [smart_id, standard, entry_time, updated_time, teacher_name, upd_smart_id, hid, is_active, quantity, item_type, section, exit_time, category]
2017-02-20 15:00:32 INFO  TableMetadata:69 - HHH000108: Foreign keys: [fk_jjbcqtrbnfrm24mt741phjkh0]
2017-02-20 15:00:32 INFO  TableMetadata:70 - HHH000126: Indexes: [inventory_assignments_pkey]
2017-02-20 15:00:32 INFO  TableMetadata:66 - HHH000261: Table found: public.leavemaster
2017-02-20 15:00:32 INFO  TableMetadata:67 - HHH000037: Columns: [exit_time, entry_time, update_time, hid, is_active, leave_type, days_allow]
2017-02-20 15:00:32 INFO  TableMetadata:69 - HHH000108: Foreign keys: [fk_paqgfwulaw8juc6ucw2y7sx12]
2017-02-20 15:00:32 INFO  TableMetadata:70 - HHH000126: Indexes: [leavemaster_pkey]
2017-02-20 15:00:32 INFO  TableMetadata:66 - HHH000261: Table found: public.leave_details
2017-02-20 15:00:32 INFO  TableMetadata:67 - HHH000037: Columns: [smart_id, hid, applied_leaves, leave_type, left_leaves]
2017-02-20 15:00:32 INFO  TableMetadata:69 - HHH000108: Foreign keys: [fk_2swgkcrky61an8mu66eveufgs]
2017-02-20 15:00:32 INFO  TableMetadata:70 - HHH000126: Indexes: [leave_details_pkey]
2017-02-20 15:00:32 INFO  TableMetadata:66 - HHH000261: Table found: public.login
2017-02-20 15:00:32 INFO  TableMetadata:67 - HHH000037: Columns: [smart_id, entry_time, updated_time, password, hid, referencesmartid, attempt]
2017-02-20 15:00:32 INFO  TableMetadata:69 - HHH000108: Foreign keys: [fk_7tog7ev58dmyo6j9tdy1fpd8k]
2017-02-20 15:00:32 INFO  TableMetadata:70 - HHH000126: Indexes: [login_pkey]
2017-02-20 15:00:32 INFO  TableMetadata:66 - HHH000261: Table found: public.modules
2017-02-20 15:00:32 INFO  TableMetadata:67 - HHH000037: Columns: [entry_time, hid, module, sub_module]
2017-02-20 15:00:32 INFO  TableMetadata:69 - HHH000108: Foreign keys: [fk_hwnnjhuj1ntori6k73o5ti026]
2017-02-20 15:00:32 INFO  TableMetadata:70 - HHH000126: Indexes: [modules_pkey]
2017-02-20 15:00:32 INFO  TableMetadata:66 - HHH000261: Table found: public.permission_master
2017-02-20 15:00:32 INFO  TableMetadata:67 - HHH000037: Columns: [exit_time, entry_time, p_edit, updated_time, hid, role, is_active, p_add, p_view, sub_module_name, p_del, module_name]
2017-02-20 15:00:32 INFO  TableMetadata:69 - HHH000108: Foreign keys: [fk_mxswyetvs6aojdo7jiav3ay52]
2017-02-20 15:00:32 INFO  TableMetadata:70 - HHH000126: Indexes: [permission_master_pkey]
2017-02-20 15:00:32 INFO  TableMetadata:66 - HHH000261: Table found: public.profile_master
2017-02-20 15:00:32 INFO  TableMetadata:67 - HHH000037: Columns: [sub_dept_name, country, syllabus, updated_time, billing_details, hid, previous_school, mother_name, martial_status, experiance, section, add_line1, ten_percentage, exit_time, institution, ten_school_name, academic_year, school, passport_expiry_date, band, state, twelve_pass_year, certification_details, ug_percentage, entry_time, image, joining_date, pincode, relation_with_guardian, emergency_contact_person, previous_year, caste, passport_issue_date, functional_manager, language_known, qualification, add_line2, pan_number, add_line3, nationality, counter_signing_manager_name, father_name, dob, domain, blood_group, father_mob_number, designation, pg_pass_year, email_id, visa_details, guardian_name, mother_income, role, gender, city, teacher_id, counter_signing_manager_id, mother_occupation, twelve_percentage, ten_pass_year, mother_mob_number, pg_percentage, first_name, class, smart_id, emergency_contact_number, pg_school_name, ecnr_status, father_occupation, is_active, reporting_manager_id, upd_smartid, ug_school_name, dept_name, last_name, reporting_manager_name, school_name, student_id, ug_pass_year, middle_name, aadhar_number, religion, previous_class, father_income, twelve_school_name, passport_number, rfid, mobile_number]
2017-02-20 15:00:32 INFO  TableMetadata:69 - HHH000108: Foreign keys: [fk_rewb2a2wftktpfk7w5dd22wai]
2017-02-20 15:00:32 INFO  TableMetadata:70 - HHH000126: Indexes: [profile_master_pkey]
2017-02-20 15:00:32 INFO  TableMetadata:66 - HHH000261: Table found: public.report_card
2017-02-20 15:00:32 INFO  TableMetadata:67 - HHH000037: Columns: [max_marks, standard, subject_grade, teacher_name, hid, is_active, entrytime, reporting_manager_id, subject, section, min_marks, exit_time, result, student_name, update_time, academic_year, marks_obtained, total_grade, smartid]
2017-02-20 15:00:32 INFO  TableMetadata:69 - HHH000108: Foreign keys: [fk_q8d6cy4bo5rxoik3mbcvanf2h]
2017-02-20 15:00:32 INFO  TableMetadata:70 - HHH000126: Indexes: [report_card_pkey]
2017-02-20 15:00:32 INFO  TableMetadata:66 - HHH000261: Table found: public.token
2017-02-20 15:00:32 INFO  TableMetadata:67 - HHH000037: Columns: [smart_id, hid, role, token_number]
2017-02-20 15:00:32 INFO  TableMetadata:69 - HHH000108: Foreign keys: [fk_5lrma49hhnceu7jc3bpb1xgqv]
2017-02-20 15:00:32 INFO  TableMetadata:70 - HHH000126: Indexes: [token_pkey]
2017-02-20 15:00:32 INFO  TableMetadata:66 - HHH000261: Table found: public.weekdays
2017-02-20 15:00:32 INFO  TableMetadata:67 - HHH000037: Columns: [institution, school, isactive, weekday]
2017-02-20 15:00:32 INFO  TableMetadata:69 - HHH000108: Foreign keys: []
2017-02-20 15:00:32 INFO  TableMetadata:70 - HHH000126: Indexes: [weekdays_pkey]
2017-02-20 15:00:32 INFO  TableMetadata:66 - HHH000261: Table found: public.banners
2017-02-20 15:00:32 INFO  TableMetadata:67 - HHH000037: Columns: [exit_time, entry_time, image, updated_time, is_active, title]
2017-02-20 15:00:32 INFO  TableMetadata:69 - HHH000108: Foreign keys: []
2017-02-20 15:00:32 INFO  TableMetadata:70 - HHH000126: Indexes: [banners_pkey]
2017-02-20 15:00:32 INFO  TableMetadata:66 - HHH000261: Table found: public.notice
2017-02-20 15:00:32 INFO  TableMetadata:67 - HHH000037: Columns: [exit_time, smart_id, entry_time, update_time, is_active, role, message, type, updated_id]
2017-02-20 15:00:32 INFO  TableMetadata:69 - HHH000108: Foreign keys: []
2017-02-20 15:00:32 INFO  TableMetadata:70 - HHH000126: Indexes: [notice_pkey]
2017-02-20 15:00:32 INFO  SchemaUpdate:242 - HHH000232: Schema update complete
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/feeMaster],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.FeeMasterController.getFee(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/feeMaster],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.FeeMasterController.addFee(com.gsmart.model.FeeMaster,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/feeMaster/{task}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.FeeMasterController.editFee(com.gsmart.model.FeeMaster,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/modules],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.ModulesController.getmodules(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/modules],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.ModulesController.addModules(com.gsmart.model.Modules,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/attendance/calender/{month}/{year}/{smartId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.AttendanceController.getAttendance(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession,java.lang.Integer,java.lang.Integer,java.lang.String,com.gsmart.model.Holiday) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/attendance],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.AttendanceController.addAttendance(java.util.Map<java.lang.String, java.util.List<com.gsmart.model.Attendance>>,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/attendance/{task}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.AttendanceController.editDeleteAttendance(com.gsmart.model.Attendance,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/attendance/{smartId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.AttendanceController.orgStructureController(java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/leavemaster],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.LeaveMasterController.getleavemaster(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/leavemaster],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.LeaveMasterController.addLeaveMaster(com.gsmart.model.LeaveMaster,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/leavemaster/{task}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.LeaveMasterController.editLeaveMaster(com.gsmart.model.LeaveMaster,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/fee],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.FeeController.addFee(com.gsmart.model.Fee,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/fee/{task}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.FeeController.editFee(com.gsmart.model.Fee,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/fee/viewFee],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.util.ArrayList<com.gsmart.model.Fee>>> com.gsmart.controller.FeeController.getFeeList(com.gsmart.model.Fee,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/fee/{smartId}/{academicYear}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.FeeController.feeStructureController(java.lang.String,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/fee/totalfee],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.FeeController.gettotalfee(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/fee/totalpaidfees],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.FeeController.gettotalpaidfee(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/fee/paidfee],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.FeeController.getPaidStudentsList(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/fee/unpaidfee],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.FeeController.getUnPaidStudentsList(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/band/{task}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.BandController.editDeleteBand(com.gsmart.model.Band,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/band],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.BandController.getBand(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/band],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.BandController.addBand(com.gsmart.model.Band,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/rolepermission],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.RolePermissionController.addPermission(com.gsmart.model.RolePermission,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/rolepermission],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.RolePermissionController.getPermissionList(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/rolepermission/subModules],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.List<com.gsmart.model.RolePermission>> com.gsmart.controller.RolePermissionController.getSubModels(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/rolepermission/{task}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.RolePermissionController.editPermission(com.gsmart.model.RolePermission,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/holiday],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.HolidayController.getHoliday(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/holiday],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.HolidayController.addHoliday(com.gsmart.model.Holiday,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/holiday/{task}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.HolidayController.editHoliday(com.gsmart.model.Holiday,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/holiday],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.HolidayController.deleteBand(com.gsmart.model.Holiday) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/inventoryassignment],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.InventoryAssignmentsController.getInventory(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/inventoryassignment],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.InventoryAssignmentsController.addInventory(com.gsmart.model.InventoryAssignments,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/inventoryassignment/{task}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.InventoryAssignmentsController.editdeleteInventory(com.gsmart.model.InventoryAssignments,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/notice/viewNotice/{smartId}/{year}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.NoticeController.viewNotice(java.lang.String,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartServiceException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/notice/viewMyNotice/{smartId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.NoticeController.viewMyNotice(java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartServiceException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/notice/generic/{type}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.NoticeController.viewGenericNotice(java.lang.String)
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/notice/addNotice],methods=[POST],params=[],headers=[],consumes=[application/json],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.NoticeController.addNotice(com.gsmart.model.Notice,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartServiceException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/notice/editNotice],methods=[PUT],params=[],headers=[],consumes=[application/json],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.NoticeController.editNotice(com.gsmart.model.Notice,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartServiceException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/notice/deleteNotice],methods=[PUT],params=[],headers=[],consumes=[application/json],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.NoticeController.deleteNotice(com.gsmart.model.Notice,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartServiceException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/inventory],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.InventoryController.getInventory(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/inventory],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.InventoryController.addInventory(com.gsmart.model.Inventory,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/inventory/{task}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.InventoryController.editInventory(com.gsmart.model.Inventory,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/rfid],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.RfidController.getProfilesWithoutRfid(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/rfid],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.RfidController.addRfid(com.gsmart.model.Profile,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/banner],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.BannerController.getBanner(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/banner],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.BannerController.addBannner(com.gsmart.model.Banners,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartServiceException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/banner/{task}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.BannerController.editDeleteBanner(com.gsmart.model.Banners,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/org/{smartId}],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.OrgStructureController.orgStructureController(java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/org/searchname],methods=[POST],params=[],headers=[],consumes=[application/json],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.util.ArrayList<com.gsmart.model.Profile>>> com.gsmart.controller.OrgStructureController.Search(com.gsmart.model.Search,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession)
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/org/search/{smartId}],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.util.ArrayList<com.gsmart.model.Profile>>> com.gsmart.controller.OrgStructureController.searchRep(com.gsmart.model.Search,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/registration/searchRep],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.RegistrationController.searchRep(com.gsmart.model.Search,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession)
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/registration/employee],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.RegistrationController.viewEmployeeProfiles(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/registration/student],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.RegistrationController.viewStudentProfiles(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/registration/addProfile],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.RegistrationController.addUser(com.gsmart.model.Profile,com.gsmart.model.Login,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/registration/updateProfile/{updEmpSmartId}],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> com.gsmart.controller.RegistrationController.updateProfile(com.gsmart.model.Profile,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/privilege/{task}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.PrivilegeController.editPrivilege(com.gsmart.model.Profile,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/privilege],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.PrivilegeController.search(com.gsmart.model.Profile,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/password/email],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.PasswordController.emailLink(java.lang.String) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/password],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.PasswordController.setPassword(com.gsmart.model.Login,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException,java.security.NoSuchAlgorithmException,java.io.UnsupportedEncodingException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.LoginController.authenticate(com.gsmart.model.Login,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/login],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> com.gsmart.controller.LoginController.logout(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/myteamleave/{task}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.MyTeamLeaveController.editDeleteBand(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession,com.gsmart.model.Leave,java.lang.String) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/myteamleave],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.MyTeamLeaveController.getLeave(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/assign/{task}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.AssignController.editDeleteBand(com.gsmart.model.Assign,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/assign],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.AssignController.getAssigningReportee(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/assign],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.AssignController.addAssigningReportee(com.gsmart.model.Assign,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/assign/staff],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.AssignController.getStaffs(com.gsmart.model.Hierarchy,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/leave],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.LeaveController.getLeave(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/leave],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.LeaveController.addLeave(com.gsmart.model.Leave,java.lang.Integer,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/leave/{task}],methods=[PUT],params=[],headers=[],consumes=[application/json],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.LeaveController.editLeave(com.gsmart.model.Leave,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/leave/leftleaves/{smartId}/{leaveType}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.LeaveController.getLeftLeaves(java.lang.String,java.lang.String)
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/weekdays],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.List<com.gsmart.model.WeekDays>> com.gsmart.controller.WeekDayController.getWeekDaysList() throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/weekdays],methods=[POST],params=[],headers=[],consumes=[application/json],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.WeekDayController.addWeekDays(com.gsmart.model.WeekDays) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/weekdays],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.WeekDayController.deleteWeekDays(com.gsmart.model.WeekDays) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/weekdays],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.WeekDayController.updateWeekDays(com.gsmart.model.WeekDays) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/hierarchy],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.HierarchyController.getHierarchy(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/hierarchy/{task}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.HierarchyController.editDeleteHierarchy(com.gsmart.model.Hierarchy,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/hierarchy],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.HierarchyController.addHierarchy(com.gsmart.model.Hierarchy,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/reportCard/{task}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.ReportCardController.editDeleteReportCard(com.gsmart.model.ReportCard,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/reportCard/excelToDB/{smartId}],methods=[POST],params=[],headers=[],consumes=[multipart/form-data],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> com.gsmart.controller.ReportCardController.excelToDB(java.lang.String,org.springframework.web.multipart.MultipartFile,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession)
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/reportCard/getStructure/{smartId}/{academicYear}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.ReportCardController.getReportCardStructure(java.lang.String,java.lang.String,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartServiceException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/reportCard],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> com.gsmart.controller.ReportCardController.getList(org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:34 INFO  RequestMappingHandlerMapping:197 - Mapped "{[/reportCard],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<com.gsmart.util.IAMResponse> com.gsmart.controller.ReportCardController.addReportCard(com.gsmart.model.ReportCard,org.springframework.http.HttpHeaders,javax.servlet.http.HttpSession) throws com.gsmart.util.GSmartBaseException
2017-02-20 15:00:35 INFO  ExceptionHandlerExceptionResolver:313 - Detected @ExceptionHandler methods in GSmartExceptionHandler
2017-02-20 15:00:35 INFO  DispatcherServlet:498 - FrameworkServlet 'mvc-dispatcher': initialization completed in 18650 ms
2017-02-20 15:04:13 INFO  Loggers:105 - Start :: LoginController.logout() :: 61
2017-02-20 15:04:13 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:04:13 INFO  Loggers:105 - Start :: TokenServiceImpl.deleteToken() :: 47
2017-02-20 15:04:16 INFO  Loggers:105 - Start :: LoginController.authenticate() :: 47
2017-02-20 15:04:16 INFO  Loggers:86 - Login [smartId=100001, password=1234, newPassword=null, confirmPassword=null, referenceSmartId=null, attempt=null, entryTime=null, updatedTime=null]
2017-02-20 15:04:16 INFO  Loggers:105 - Start :: LoginController.authenticate() :: 48
2017-02-20 15:04:16 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:04:16 INFO  Loggers:105 - Start :: LoginServicesImpl.authenticate() :: 41
2017-02-20 15:04:16 INFO  Loggers:86 - Login [smartId=100001, password=1234, newPassword=null, confirmPassword=null, referenceSmartId=null, attempt=null, entryTime=null, updatedTime=null]
2017-02-20 15:04:16 INFO  Loggers:105 - Start :: TokenDaoImpl.deleteToken() :: 78
2017-02-20 15:04:16 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:04:16 INFO  Loggers:86 - 
Token [
	TokenNumber=164507152707254690330155858282
	SmartID=null
	Role=null ]
2017-02-20 15:04:17 INFO  Loggers:105 - Start :: LoginController.authenticate() :: 47
2017-02-20 15:04:17 INFO  Loggers:86 - Login [smartId=100001, password=1234, newPassword=null, confirmPassword=null, referenceSmartId=null, attempt=null, entryTime=null, updatedTime=null]
2017-02-20 15:04:18 INFO  Loggers:105 - Start :: LoginController.authenticate() :: 48
2017-02-20 15:04:18 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:04:18 INFO  Loggers:105 - Start :: LoginServicesImpl.authenticate() :: 41
2017-02-20 15:04:18 INFO  Loggers:86 - Login [smartId=100001, password=1234, newPassword=null, confirmPassword=null, referenceSmartId=null, attempt=null, entryTime=null, updatedTime=null]
2017-02-20 15:04:20 INFO  DefaultLoadEventListener:158 - HHH000327: Error performing load command : org.hibernate.SessionException: Session is closed!
2017-02-20 15:04:20 INFO  Loggers:105 - End :: TokenServiceImpl.deleteToken() :: 55
2017-02-20 15:04:20 INFO  Loggers:81 - User is already logged in
2017-02-20 15:04:20 INFO  Loggers:105 - Start :: RolePermissionServicesImp.getPermission() :: 113
2017-02-20 15:04:20 INFO  Loggers:105 - End :: RolePermissionServicesImp.getPermission() :: 115
2017-02-20 15:04:20 INFO  Loggers:105 - Start :: RolePermissionDaoImp.getPermission() :: 197
2017-02-20 15:04:20 INFO  Loggers:81 - given role is : ADMIN
2017-02-20 15:04:20 INFO  GSmartExceptionHandler:18 - GSmartServiceException Occured:: URL=http://localhost:8080/gsmart/login
2017-02-20 15:04:20 INFO  Loggers:66 - given modules size is : 11
2017-02-20 15:04:20 INFO  Loggers:81 - given moduleName is : ReportCard
2017-02-20 15:04:20 INFO  Loggers:81 - given moduleName is : Maintenance
2017-02-20 15:04:20 INFO  Loggers:81 - given moduleName is : Fee
2017-02-20 15:04:20 INFO  Loggers:81 - given moduleName is : Registration
2017-02-20 15:04:20 INFO  Loggers:81 - given moduleName is : InventoryAssignments
2017-02-20 15:04:20 INFO  Loggers:81 - given moduleName is : Modules
2017-02-20 15:04:20 INFO  Loggers:81 - given moduleName is : performance-appraisal
2017-02-20 15:04:20 INFO  Loggers:81 - given moduleName is : Band
2017-02-20 15:04:20 INFO  Loggers:81 - given moduleName is : OrgStructure
2017-02-20 15:04:20 INFO  Loggers:81 - given moduleName is : Contact-Teacher
2017-02-20 15:04:20 INFO  Loggers:81 - given moduleName is : Notice
2017-02-20 15:04:20 INFO  Loggers:105 - End :: RolePermissionDaoImp.getPermission() :: 223
2017-02-20 15:04:20 INFO  Loggers:84 - End :: Object Received [
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=ReportCard, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=Maintenance, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=Fee, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=Registration, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=InventoryAssignments, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=Modules, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=performance-appraisal, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=Band, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=OrgStructure, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=Contact-Teacher, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=Notice, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null]]
2017-02-20 15:04:20 INFO  Loggers:105 - Start :: ProfileDaoImp.getProfileDetails() :: 257
2017-02-20 15:04:21 INFO  Loggers:105 - End :: ProfileDaoImp.getProfileDetails() :: 272
2017-02-20 15:04:21 INFO  Loggers:105 - End :: LoginServicesImpl.authenticate() :: 97
2017-02-20 15:04:21 INFO  Loggers:105 - End :: LoginController.authenticate() :: 50
2017-02-20 15:04:21 INFO  Loggers:86 - {result=0, permissions=[
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=ReportCard, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=Maintenance, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=Fee, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=Registration, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=InventoryAssignments, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=Modules, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=performance-appraisal, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=Band, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=OrgStructure, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=Contact-Teacher, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null], 
 RolePermission [
{	 entryTime=null, 
	role=null, 
	moduleName=Notice, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null]], profile=Profile [smartId=100001, firstName=AMAR, role=ADMIN, reportingManagerName=AMAR, reportingManagerId=100001, totalAmount=0.0, paidAmount=0.0, balanceAmount=0.0], message=welcome back, token=164507152707254690330155858282}
2017-02-20 15:04:21 INFO  Loggers:81 - Token Number164507152707254690330155858282
2017-02-20 15:04:21 INFO  Loggers:81 - Session Attribute: 164507152707254690330155858282
2017-02-20 15:04:22 WARN  PageNotFound:1114 - No mapping found for HTTP request with URI [/gsmart/profile/profileCount] in DispatcherServlet with name 'mvc-dispatcher'
2017-02-20 15:04:23 WARN  PageNotFound:1114 - No mapping found for HTTP request with URI [/gsmart/profile/profileCount] in DispatcherServlet with name 'mvc-dispatcher'
2017-02-20 15:04:54 INFO  Loggers:105 - Start :: NoticeController.viewNotice() :: 67
2017-02-20 15:04:54 INFO  Loggers:105 - Start :: GetAuthorization.getAuthentication() :: 155
2017-02-20 15:04:54 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:04:54 INFO  Loggers:105 - Start :: NoticeController.viewMyNotice() :: 105
2017-02-20 15:04:54 INFO  Loggers:105 - Start :: GetAuthorization.getAuthentication() :: 155
2017-02-20 15:04:54 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:04:54 INFO  Loggers:105 - Start :: GetAuthorization.authorizationForGet() :: 33
2017-02-20 15:04:54 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:04:54 INFO  Loggers:105 - Start :: GetAuthorization.authorizationForGet() :: 33
2017-02-20 15:04:54 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:04:54 INFO  Loggers:86 - 
Token [
	TokenNumber=164507152707254690330155858282
	SmartID=100001
	Role=ADMIN ]
2017-02-20 15:04:54 INFO  Loggers:81 - Module: Notice
2017-02-20 15:04:54 INFO  Loggers:105 - Start :: GetAuthorization.getPermission() :: 133
2017-02-20 15:04:54 INFO  Loggers:86 - 
Token [
	TokenNumber=164507152707254690330155858282
	SmartID=100001
	Role=ADMIN ]
2017-02-20 15:04:54 INFO  Loggers:81 - Module: Notice
2017-02-20 15:04:54 INFO  Loggers:105 - Start :: GetAuthorization.getPermission() :: 133
2017-02-20 15:04:54 INFO  Loggers:86 - 
Token [
	TokenNumber=164507152707254690330155858282
	SmartID=100001
	Role=ADMIN ]
2017-02-20 15:04:54 INFO  Loggers:105 - Start :: GetAuthorization.getPermission() :: 134
2017-02-20 15:04:54 INFO  Loggers:81 - Start :: Object Received Notice
2017-02-20 15:04:54 INFO  Loggers:86 - 
Token [
	TokenNumber=164507152707254690330155858282
	SmartID=100001
	Role=ADMIN ]
2017-02-20 15:04:54 INFO  Loggers:105 - Start :: GetAuthorization.getPermission() :: 134
2017-02-20 15:04:54 INFO  Loggers:81 - Start :: Object Received Notice
2017-02-20 15:04:54 INFO  Loggers:105 - End :: GetAuthorization.getPermission() :: 145
2017-02-20 15:04:54 INFO  Loggers:86 - 
 RolePermission [
{	 entryTime=2016-02-07 10:10:00, 
	role=ADMIN, 
	moduleName=Notice, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null]
2017-02-20 15:04:54 INFO  Loggers:105 - End :: GetAuthorization.authorizationForGet() :: 51
2017-02-20 15:04:54 INFO  Loggers:86 - 
 RolePermission [
{	 entryTime=2016-02-07 10:10:00, 
	role=ADMIN, 
	moduleName=Notice, 
	subModuleName=null
}, 
add=false,
view=false,
edit=false,
del=false,
updatedTime=null,
exitTime=null,
isActive=null]
2017-02-20 15:04:54 INFO  Loggers:105 - Start :: NoticeDaoImpl.viewMyNotice() :: 96
2017-02-20 15:04:54 INFO  Loggers:105 - Start :: NoticeDaoImpl.viewMyNotice() :: 98
2017-02-20 15:04:54 INFO  Loggers:105 - Start :: NoticeDaoImpl.viewMyNotice() :: 102
2017-02-20 15:04:54 INFO  Loggers:81 - Start :: Object Received 100001
2017-02-20 15:04:54 INFO  Loggers:105 - End :: GetAuthorization.getPermission() :: 145
2017-02-20 15:04:54 INFO  Loggers:86 - 
 RolePermission [
{	 entryTime=2016-02-07 10:10:00, 
	role=ADMIN, 
	moduleName=Notice, 
	subModuleName=null
}, 
add=true,
view=true,
edit=true,
del=true,
updatedTime=null,
exitTime=null,
isActive=Y]
2017-02-20 15:04:54 INFO  Loggers:105 - End :: GetAuthorization.authorizationForGet() :: 51
2017-02-20 15:04:54 INFO  Loggers:86 - 
 RolePermission [
{	 entryTime=2016-02-07 10:10:00, 
	role=ADMIN, 
	moduleName=Notice, 
	subModuleName=null
}, 
add=true,
view=true,
edit=true,
del=true,
updatedTime=null,
exitTime=null,
isActive=Y]
2017-02-20 15:04:54 INFO  Loggers:105 - Start :: SearchServiceImp.getAllProfiles() :: 63
2017-02-20 15:04:54 INFO  Loggers:105 - Start :: ProfileDaoImp.getAllRecord() :: 286
2017-02-20 15:04:55 INFO  Loggers:81 - returnd to getall Profiles in serviceImpl 
2017-02-20 15:04:55 INFO  Loggers:105 - Start :: NoticeController.viewNotice() :: 67
2017-02-20 15:04:55 INFO  Loggers:105 - Start :: GetAuthorization.getAuthentication() :: 155
2017-02-20 15:04:55 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:04:55 INFO  Loggers:105 - Start :: GetAuthorization.authorizationForGet() :: 33
2017-02-20 15:04:55 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:04:55 INFO  Loggers:86 - 
Token [
	TokenNumber=164507152707254690330155858282
	SmartID=100001
	Role=ADMIN ]
2017-02-20 15:04:55 INFO  Loggers:81 - Module: Notice
2017-02-20 15:04:55 INFO  Loggers:105 - Start :: GetAuthorization.getPermission() :: 133
2017-02-20 15:04:55 INFO  Loggers:86 - 
Token [
	TokenNumber=164507152707254690330155858282
	SmartID=100001
	Role=ADMIN ]
2017-02-20 15:04:55 INFO  Loggers:105 - Start :: GetAuthorization.getPermission() :: 134
2017-02-20 15:04:55 INFO  Loggers:81 - Start :: Object Received Notice
2017-02-20 15:04:55 INFO  Loggers:105 - End :: GetAuthorization.getPermission() :: 145
2017-02-20 15:04:55 INFO  Loggers:86 - 
 RolePermission [
{	 entryTime=2016-02-07 10:10:00, 
	role=ADMIN, 
	moduleName=Notice, 
	subModuleName=null
}, 
add=true,
view=true,
edit=true,
del=true,
updatedTime=null,
exitTime=null,
isActive=Y]
2017-02-20 15:04:55 INFO  Loggers:105 - End :: GetAuthorization.authorizationForGet() :: 51
2017-02-20 15:04:55 INFO  Loggers:86 - 
 RolePermission [
{	 entryTime=2016-02-07 10:10:00, 
	role=ADMIN, 
	moduleName=Notice, 
	subModuleName=null
}, 
add=true,
view=true,
edit=true,
del=true,
updatedTime=null,
exitTime=null,
isActive=Y]
2017-02-20 15:04:55 INFO  Loggers:105 - Start :: SearchServiceImp.getAllProfiles() :: 63
2017-02-20 15:04:55 INFO  Loggers:105 - Start :: ProfileDaoImp.getAllRecord() :: 286
2017-02-20 15:04:55 INFO  Loggers:81 - returnd to getall Profiles in serviceImpl 
2017-02-20 15:04:55 INFO  Loggers:105 - End :: NoticeDaoImpl.viewMyNotice() :: 109
2017-02-20 15:04:55 INFO  Loggers:84 - End :: Object Received [Notice [entryTime=2017-02-20-12.41.01.572, smartId=100001, message=dfgfd, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Specific, childFlag=false, updatedId=null], Notice [entryTime=2017-02-18-11.13.40.269, smartId=100001, message=qwertyuio, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Specific, childFlag=false, updatedId=null], Notice [entryTime=2017-02-17-12.13.46.231, smartId=100001, message=DFGHJKLJHGF, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Generic, childFlag=false, updatedId=null], Notice [entryTime=2017-02-17-12.13.29.101, smartId=100001, message=HELLO, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Generic, childFlag=false, updatedId=null]]
2017-02-20 15:04:55 INFO  Loggers:105 - Start :: NoticeController.viewMyNotice() :: 105
2017-02-20 15:04:55 INFO  Loggers:105 - Start :: GetAuthorization.getAuthentication() :: 155
2017-02-20 15:04:55 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:04:55 INFO  Loggers:105 - Start :: GetAuthorization.authorizationForGet() :: 33
2017-02-20 15:04:55 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:04:55 INFO  Loggers:86 - 
Token [
	TokenNumber=164507152707254690330155858282
	SmartID=100001
	Role=ADMIN ]
2017-02-20 15:04:55 INFO  Loggers:81 - Module: Notice
2017-02-20 15:04:55 INFO  Loggers:105 - Start :: GetAuthorization.getPermission() :: 133
2017-02-20 15:04:55 INFO  Loggers:86 - 
Token [
	TokenNumber=164507152707254690330155858282
	SmartID=100001
	Role=ADMIN ]
2017-02-20 15:04:55 INFO  Loggers:105 - Start :: GetAuthorization.getPermission() :: 134
2017-02-20 15:04:55 INFO  Loggers:81 - Start :: Object Received Notice
2017-02-20 15:04:55 INFO  Loggers:105 - End :: GetAuthorization.getPermission() :: 145
2017-02-20 15:04:55 INFO  Loggers:86 - 
 RolePermission [
{	 entryTime=2016-02-07 10:10:00, 
	role=ADMIN, 
	moduleName=Notice, 
	subModuleName=null
}, 
add=true,
view=true,
edit=true,
del=true,
updatedTime=null,
exitTime=null,
isActive=Y]
2017-02-20 15:04:55 INFO  Loggers:105 - End :: GetAuthorization.authorizationForGet() :: 51
2017-02-20 15:04:55 INFO  Loggers:86 - 
 RolePermission [
{	 entryTime=2016-02-07 10:10:00, 
	role=ADMIN, 
	moduleName=Notice, 
	subModuleName=null
}, 
add=true,
view=true,
edit=true,
del=true,
updatedTime=null,
exitTime=null,
isActive=Y]
2017-02-20 15:04:55 INFO  Loggers:105 - Start :: NoticeDaoImpl.viewMyNotice() :: 96
2017-02-20 15:04:55 INFO  Loggers:105 - Start :: NoticeDaoImpl.viewMyNotice() :: 98
2017-02-20 15:04:55 INFO  Loggers:105 - Start :: NoticeDaoImpl.viewMyNotice() :: 102
2017-02-20 15:04:55 INFO  Loggers:81 - Start :: Object Received 100001
2017-02-20 15:04:55 INFO  Loggers:105 - End :: NoticeDaoImpl.viewMyNotice() :: 109
2017-02-20 15:04:55 INFO  Loggers:84 - End :: Object Received [Notice [entryTime=2017-02-20-12.41.01.572, smartId=100001, message=dfgfd, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Specific, childFlag=false, updatedId=null], Notice [entryTime=2017-02-18-11.13.40.269, smartId=100001, message=qwertyuio, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Specific, childFlag=false, updatedId=null], Notice [entryTime=2017-02-17-12.13.46.231, smartId=100001, message=DFGHJKLJHGF, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Generic, childFlag=false, updatedId=null], Notice [entryTime=2017-02-17-12.13.29.101, smartId=100001, message=HELLO, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Generic, childFlag=false, updatedId=null]]
2017-02-20 15:04:59 INFO  Loggers:105 - Start :: NoticeController.viewMyNotice() :: 105
2017-02-20 15:05:00 INFO  Loggers:105 - Start :: GetAuthorization.getAuthentication() :: 155
2017-02-20 15:05:00 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:05:00 INFO  Loggers:105 - Start :: GetAuthorization.authorizationForGet() :: 33
2017-02-20 15:05:00 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:05:00 INFO  Loggers:86 - 
Token [
	TokenNumber=164507152707254690330155858282
	SmartID=100001
	Role=ADMIN ]
2017-02-20 15:05:00 INFO  Loggers:81 - Module: Notice
2017-02-20 15:05:00 INFO  Loggers:105 - Start :: GetAuthorization.getPermission() :: 133
2017-02-20 15:05:00 INFO  Loggers:86 - 
Token [
	TokenNumber=164507152707254690330155858282
	SmartID=100001
	Role=ADMIN ]
2017-02-20 15:05:00 INFO  Loggers:105 - Start :: GetAuthorization.getPermission() :: 134
2017-02-20 15:05:00 INFO  Loggers:81 - Start :: Object Received Notice
2017-02-20 15:05:00 INFO  Loggers:105 - End :: GetAuthorization.getPermission() :: 145
2017-02-20 15:05:00 INFO  Loggers:86 - 
 RolePermission [
{	 entryTime=2016-02-07 10:10:00, 
	role=ADMIN, 
	moduleName=Notice, 
	subModuleName=null
}, 
add=true,
view=true,
edit=true,
del=true,
updatedTime=null,
exitTime=null,
isActive=Y]
2017-02-20 15:05:00 INFO  Loggers:105 - End :: GetAuthorization.authorizationForGet() :: 51
2017-02-20 15:05:00 INFO  Loggers:86 - 
 RolePermission [
{	 entryTime=2016-02-07 10:10:00, 
	role=ADMIN, 
	moduleName=Notice, 
	subModuleName=null
}, 
add=true,
view=true,
edit=true,
del=true,
updatedTime=null,
exitTime=null,
isActive=Y]
2017-02-20 15:05:00 INFO  Loggers:105 - Start :: NoticeDaoImpl.viewMyNotice() :: 96
2017-02-20 15:05:00 INFO  Loggers:105 - Start :: NoticeDaoImpl.viewMyNotice() :: 98
2017-02-20 15:05:00 INFO  Loggers:105 - Start :: NoticeDaoImpl.viewMyNotice() :: 102
2017-02-20 15:05:00 INFO  Loggers:81 - Start :: Object Received 100001
2017-02-20 15:05:00 INFO  Loggers:105 - End :: NoticeDaoImpl.viewMyNotice() :: 109
2017-02-20 15:05:00 INFO  Loggers:84 - End :: Object Received [Notice [entryTime=2017-02-20-12.41.01.572, smartId=100001, message=dfgfd, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Specific, childFlag=false, updatedId=null], Notice [entryTime=2017-02-18-11.13.40.269, smartId=100001, message=qwertyuio, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Specific, childFlag=false, updatedId=null], Notice [entryTime=2017-02-17-12.13.46.231, smartId=100001, message=DFGHJKLJHGF, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Generic, childFlag=false, updatedId=null], Notice [entryTime=2017-02-17-12.13.29.101, smartId=100001, message=HELLO, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Generic, childFlag=false, updatedId=null]]
2017-02-20 15:05:00 INFO  Loggers:105 - Start :: NoticeController.viewMyNotice() :: 105
2017-02-20 15:05:00 INFO  Loggers:105 - Start :: GetAuthorization.getAuthentication() :: 155
2017-02-20 15:05:00 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:05:00 INFO  Loggers:105 - Start :: GetAuthorization.authorizationForGet() :: 33
2017-02-20 15:05:00 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:05:00 INFO  Loggers:86 - 
Token [
	TokenNumber=164507152707254690330155858282
	SmartID=100001
	Role=ADMIN ]
2017-02-20 15:05:00 INFO  Loggers:81 - Module: Notice
2017-02-20 15:05:00 INFO  Loggers:105 - Start :: GetAuthorization.getPermission() :: 133
2017-02-20 15:05:00 INFO  Loggers:86 - 
Token [
	TokenNumber=164507152707254690330155858282
	SmartID=100001
	Role=ADMIN ]
2017-02-20 15:05:00 INFO  Loggers:105 - Start :: GetAuthorization.getPermission() :: 134
2017-02-20 15:05:00 INFO  Loggers:81 - Start :: Object Received Notice
2017-02-20 15:05:00 INFO  Loggers:105 - End :: GetAuthorization.getPermission() :: 145
2017-02-20 15:05:00 INFO  Loggers:86 - 
 RolePermission [
{	 entryTime=2016-02-07 10:10:00, 
	role=ADMIN, 
	moduleName=Notice, 
	subModuleName=null
}, 
add=true,
view=true,
edit=true,
del=true,
updatedTime=null,
exitTime=null,
isActive=Y]
2017-02-20 15:05:00 INFO  Loggers:105 - End :: GetAuthorization.authorizationForGet() :: 51
2017-02-20 15:05:00 INFO  Loggers:86 - 
 RolePermission [
{	 entryTime=2016-02-07 10:10:00, 
	role=ADMIN, 
	moduleName=Notice, 
	subModuleName=null
}, 
add=true,
view=true,
edit=true,
del=true,
updatedTime=null,
exitTime=null,
isActive=Y]
2017-02-20 15:05:00 INFO  Loggers:105 - Start :: NoticeDaoImpl.viewMyNotice() :: 96
2017-02-20 15:05:00 INFO  Loggers:105 - Start :: NoticeDaoImpl.viewMyNotice() :: 98
2017-02-20 15:05:00 INFO  Loggers:105 - Start :: NoticeDaoImpl.viewMyNotice() :: 102
2017-02-20 15:05:00 INFO  Loggers:81 - Start :: Object Received 100001
2017-02-20 15:05:00 INFO  Loggers:105 - End :: NoticeDaoImpl.viewMyNotice() :: 109
2017-02-20 15:05:00 INFO  Loggers:84 - End :: Object Received [Notice [entryTime=2017-02-20-12.41.01.572, smartId=100001, message=dfgfd, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Specific, childFlag=false, updatedId=null], Notice [entryTime=2017-02-18-11.13.40.269, smartId=100001, message=qwertyuio, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Specific, childFlag=false, updatedId=null], Notice [entryTime=2017-02-17-12.13.46.231, smartId=100001, message=DFGHJKLJHGF, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Generic, childFlag=false, updatedId=null], Notice [entryTime=2017-02-17-12.13.29.101, smartId=100001, message=HELLO, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Generic, childFlag=false, updatedId=null]]
2017-02-20 15:05:37 INFO  Loggers:105 - Start :: NoticeController.addNotice() :: 243
2017-02-20 15:05:37 INFO  Loggers:105 - Start :: GetAuthorization.getAuthentication() :: 155
2017-02-20 15:05:37 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:05:37 INFO  Loggers:105 - Start :: NoticeDaoImpl.addNotice() :: 47
2017-02-20 15:05:38 INFO  Loggers:105 - End :: NoticeDaoImpl.addNotice() :: 56
2017-02-20 15:05:38 INFO  Loggers:105 - Start :: NoticeController.viewMyNotice() :: 105
2017-02-20 15:05:38 INFO  Loggers:105 - Start :: GetAuthorization.getAuthentication() :: 155
2017-02-20 15:05:38 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:05:38 INFO  Loggers:105 - Start :: GetAuthorization.authorizationForGet() :: 33
2017-02-20 15:05:38 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:05:38 INFO  Loggers:86 - 
Token [
	TokenNumber=164507152707254690330155858282
	SmartID=100001
	Role=ADMIN ]
2017-02-20 15:05:38 INFO  Loggers:81 - Module: Notice
2017-02-20 15:05:38 INFO  Loggers:105 - Start :: GetAuthorization.getPermission() :: 133
2017-02-20 15:05:38 INFO  Loggers:86 - 
Token [
	TokenNumber=164507152707254690330155858282
	SmartID=100001
	Role=ADMIN ]
2017-02-20 15:05:38 INFO  Loggers:105 - Start :: GetAuthorization.getPermission() :: 134
2017-02-20 15:05:38 INFO  Loggers:81 - Start :: Object Received Notice
2017-02-20 15:05:38 INFO  Loggers:105 - End :: GetAuthorization.getPermission() :: 145
2017-02-20 15:05:38 INFO  Loggers:86 - 
 RolePermission [
{	 entryTime=2016-02-07 10:10:00, 
	role=ADMIN, 
	moduleName=Notice, 
	subModuleName=null
}, 
add=true,
view=true,
edit=true,
del=true,
updatedTime=null,
exitTime=null,
isActive=Y]
2017-02-20 15:05:38 INFO  Loggers:105 - End :: GetAuthorization.authorizationForGet() :: 51
2017-02-20 15:05:38 INFO  Loggers:86 - 
 RolePermission [
{	 entryTime=2016-02-07 10:10:00, 
	role=ADMIN, 
	moduleName=Notice, 
	subModuleName=null
}, 
add=true,
view=true,
edit=true,
del=true,
updatedTime=null,
exitTime=null,
isActive=Y]
2017-02-20 15:05:38 INFO  Loggers:105 - Start :: NoticeDaoImpl.viewMyNotice() :: 96
2017-02-20 15:05:38 INFO  Loggers:105 - Start :: NoticeDaoImpl.viewMyNotice() :: 98
2017-02-20 15:05:38 INFO  Loggers:105 - Start :: NoticeDaoImpl.viewMyNotice() :: 102
2017-02-20 15:05:38 INFO  Loggers:81 - Start :: Object Received 100001
2017-02-20 15:05:38 INFO  Loggers:105 - End :: NoticeDaoImpl.viewMyNotice() :: 109
2017-02-20 15:05:38 INFO  Loggers:84 - End :: Object Received [Notice [entryTime=2017-02-20-15.05.37.640, smartId=100001, message=wertyuiop[[poiuytresdfghjkl;, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Generic, childFlag=false, updatedId=null], Notice [entryTime=2017-02-20-12.41.01.572, smartId=100001, message=dfgfd, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Specific, childFlag=false, updatedId=null], Notice [entryTime=2017-02-18-11.13.40.269, smartId=100001, message=qwertyuio, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Specific, childFlag=false, updatedId=null], Notice [entryTime=2017-02-17-12.13.46.231, smartId=100001, message=DFGHJKLJHGF, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Generic, childFlag=false, updatedId=null], Notice [entryTime=2017-02-17-12.13.29.101, smartId=100001, message=HELLO, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Generic, childFlag=false, updatedId=null]]
2017-02-20 15:05:38 INFO  Loggers:105 - Start :: NoticeController.viewMyNotice() :: 105
2017-02-20 15:05:38 INFO  Loggers:105 - Start :: GetAuthorization.getAuthentication() :: 155
2017-02-20 15:05:38 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:05:38 INFO  Loggers:105 - Start :: GetAuthorization.authorizationForGet() :: 33
2017-02-20 15:05:38 INFO  Loggers:81 - Start :: Object Received 164507152707254690330155858282
2017-02-20 15:05:38 INFO  Loggers:86 - 
Token [
	TokenNumber=164507152707254690330155858282
	SmartID=100001
	Role=ADMIN ]
2017-02-20 15:05:38 INFO  Loggers:81 - Module: Notice
2017-02-20 15:05:38 INFO  Loggers:105 - Start :: GetAuthorization.getPermission() :: 133
2017-02-20 15:05:38 INFO  Loggers:86 - 
Token [
	TokenNumber=164507152707254690330155858282
	SmartID=100001
	Role=ADMIN ]
2017-02-20 15:05:38 INFO  Loggers:105 - Start :: GetAuthorization.getPermission() :: 134
2017-02-20 15:05:38 INFO  Loggers:81 - Start :: Object Received Notice
2017-02-20 15:05:38 INFO  Loggers:105 - End :: GetAuthorization.getPermission() :: 145
2017-02-20 15:05:38 INFO  Loggers:86 - 
 RolePermission [
{	 entryTime=2016-02-07 10:10:00, 
	role=ADMIN, 
	moduleName=Notice, 
	subModuleName=null
}, 
add=true,
view=true,
edit=true,
del=true,
updatedTime=null,
exitTime=null,
isActive=Y]
2017-02-20 15:05:38 INFO  Loggers:105 - End :: GetAuthorization.authorizationForGet() :: 51
2017-02-20 15:05:38 INFO  Loggers:86 - 
 RolePermission [
{	 entryTime=2016-02-07 10:10:00, 
	role=ADMIN, 
	moduleName=Notice, 
	subModuleName=null
}, 
add=true,
view=true,
edit=true,
del=true,
updatedTime=null,
exitTime=null,
isActive=Y]
2017-02-20 15:05:38 INFO  Loggers:105 - Start :: NoticeDaoImpl.viewMyNotice() :: 96
2017-02-20 15:05:38 INFO  Loggers:105 - Start :: NoticeDaoImpl.viewMyNotice() :: 98
2017-02-20 15:05:38 INFO  Loggers:105 - Start :: NoticeDaoImpl.viewMyNotice() :: 102
2017-02-20 15:05:38 INFO  Loggers:81 - Start :: Object Received 100001
2017-02-20 15:05:38 INFO  Loggers:105 - End :: NoticeDaoImpl.viewMyNotice() :: 109
2017-02-20 15:05:38 INFO  Loggers:84 - End :: Object Received [Notice [entryTime=2017-02-20-15.05.37.640, smartId=100001, message=wertyuiop[[poiuytresdfghjkl;, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Generic, childFlag=false, updatedId=null], Notice [entryTime=2017-02-20-12.41.01.572, smartId=100001, message=dfgfd, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Specific, childFlag=false, updatedId=null], Notice [entryTime=2017-02-18-11.13.40.269, smartId=100001, message=qwertyuio, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Specific, childFlag=false, updatedId=null], Notice [entryTime=2017-02-17-12.13.46.231, smartId=100001, message=DFGHJKLJHGF, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Generic, childFlag=false, updatedId=null], Notice [entryTime=2017-02-17-12.13.29.101, smartId=100001, message=HELLO, exitTime=null, update_time=null, role=ADMIN, isActive=Y, type=Generic, childFlag=false, updatedId=null]]
2017-02-20 15:29:23 INFO  XmlWebApplicationContext:873 - Closing WebApplicationContext for namespace 'mvc-dispatcher-servlet': startup date [Mon Feb 20 15:00:17 IST 2017]; root of context hierarchy
